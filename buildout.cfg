[buildout]
parts =
      django
      sphinx
      var-directory
      evolution
develop = .
eggs = django-competition
eggs-directory = var/eggs
parts-directory = var/parts
develop-eggs-directory = var/develop-eggs

[versions]
Django = >1.6,<1.7
PyYAML = 3.11
factory_boy = 2.4.1
django-guardian = 1.2.5
django-crispy-forms = 1.4.0
djangorestframework = 3.1.0
South = 1.0.2
qrcode = 5.1

[evolution]
recipe = zc.recipe.egg
eggs = buildout-versions-checker
scripts = check-buildout-updates=evolve
arguments = 'buildout.cfg'

# Creates several subdirectories with var/ so that the django project
# can store database files and uploaded files
[var-directory]
recipe = z3c.recipe.mkdir
paths = var/db
      var/uploads
      var/qr

# Documentation generator
[sphinx]
recipe = zc.recipe.egg
eggs = Sphinx
     ${buildout:eggs}

# Creates a django project for the app to live in
[django]
recipe = djangorecipe
project = project
test = competition
testrunner = nosey
eggs = ${buildout:eggs}
     ipython            # Gives us a fancy ipython interpreter for django shell
     readline           # Needed by ipython
     django-extensions  # Provides some extra django management commands
     werkzeug           # Used by django-extensions
     django-nose        # Django-nose allows us to run tests with nose
     yanc               # Allows for colorized output from nose tests
     coverage           # Coverage determines what code is covered by the unit tests
     django-debug-toolbar       # Toolbar to help web debugging
     pillow             # Portable version of the Python Imaging Library
     django-admin-tools # Admin tools

# Creates a MUCH simpler django project for the app to live in. This
# part is intended to be used by a continuous integration service,
# that way it does'nt have to download and install a million-billion
# packages that it isn't going to use.
[simple-django]
recipe = djangorecipe
project = project
settings = simple
test = competition
testrunner = nosey
eggs = ${buildout:eggs}
     django-nose        # Django-nose allows us to run tests with nose
     coverage           # Coverage determines what code is covered by the unit tests
     pillow             # Portable version of the Python Imaging Library
